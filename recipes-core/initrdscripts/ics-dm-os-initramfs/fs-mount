#!/bin/sh

fs_mount_enabled() {
    return 0
}

fs_mount_run() {
    msg "ics-dm-os initramfs fs mount"

    if [ -z "${ROOTFS_DIR}" ]; then
        fatal "no ROOTFS_DIR"
        return 1
    fi

    debug bootparam_bootpart=${bootparam_bootpart}

    # currently we can not boot root via label and have to get the root dev
    # ourselves.
    # reason: on first boot you have the labels: rootA, rootB where rootB is an
    # empty partition. on the boot after the first update, you have only
    # label rootA, the label rootB disappeared, because adu-swupdate.sh doesnt
    # set a e2fs label. After a second update you don't have a root partition
    # with a label anymore.

    # get mmcblk at runtime, so we can boot devices which can switch between
    # emmc and sdcard with the same image.
    boot_blk=$(get_block_device boot)
    mmcblk=${boot_blk##*/}
    mmcblk=${mmcblk%p*};

    # mount rootfs
    rootfs=/dev/${mmcblk}p${bootparam_bootpart}
    mount_fs "ext4" ${rootfs} ${ROOTFS_DIR} "ro,async"

    # load overlay kernelmodule
    if [ -f ${ROOTFS_DIR}/lib/modules/$(uname -r)/kernel/fs/overlayfs/overlay.ko  ]; then
        insmod ${ROOTFS_DIR}/lib/modules/$(uname -r)/kernel/fs/overlayfs/overlay.ko
    fi

    # mount boot
    mount_fs "vfat" "${boot_blk}" "${ROOTFS_DIR}/boot" \
                 "ro,async,fmask=0002,gid=$(cat /etc/group | grep ^disk | awk -F: '{print $3}')"

    # mount cert
    cert_blk=$(get_block_device cert)
    check_ext4_fs "cert" "${cert_blk}" 0
    mount_fs "ext4" "${cert_blk}" "${ROOTFS_DIR}/mnt/cert" "rw,async"
    mkdir -p ${ROOTFS_DIR}/mnt/cert/ca
    mkdir -p ${ROOTFS_DIR}/mnt/cert/priv

    # mount etc partition
    etc_blk=$(get_block_device etc)
    check_ext4_fs "etc" "${etc_blk}" 0
    mount_fs "ext4" "${etc_blk}" "${ROOTFS_DIR}/mnt/etc" "rw,async"

    # mount factory
    factory_blk=$(get_block_device factory)
    mount_fs "ext4" "${factory_blk}" "${ROOTFS_DIR}/mnt/factory" "ro,async"

    # if etc partition is empty we copy the etc dir from factory partition
    if [ ! -d ${ROOTFS_DIR}/mnt/etc/upper ]; then
        mkdir -p ${ROOTFS_DIR}/mnt/etc/upper
        mkdir -p ${ROOTFS_DIR}/mnt/etc/work
        if [ -d ${ROOTFS_DIR}/mnt/factory/etc ]; then
            cp -rfp ${ROOTFS_DIR}/mnt/factory/etc/. ${ROOTFS_DIR}/mnt/etc/upper
        fi
    fi

    # mount etc overlay
    mount -t overlay \
          -o defaults,noatime,nodiratime,lowerdir=${ROOTFS_DIR}/etc,upperdir=${ROOTFS_DIR}/mnt/etc/upper,workdir=${ROOTFS_DIR}/mnt/etc/work \
          overlay ${ROOTFS_DIR}/etc

    # check data partition to handle unclean (not unmounted) state
    data_blk=$(get_block_device data)
    check_ext4_fs "data" "${data_blk}" 0

    # mount data partition
    #     mount flags can be optionally set via u-boot environment
    data_opts=$(get_bootloader_env_var "data-mount-options")
    if [ -z "${data_opts}" ]; then data_opts="rw,async"; fi
    mount_fs "ext4" "${data_blk}" "${ROOTFS_DIR}/mnt/data" "${data_opts}"
    mkdir -p ${ROOTFS_DIR}/mnt/data/home/work
    mkdir -p ${ROOTFS_DIR}/mnt/data/home/upper
    mkdir -p ${ROOTFS_DIR}/mnt/data/var/lib
    mkdir -p ${ROOTFS_DIR}/mnt/data/local

    # mount home overlay
    mount -t overlay \
          -o defaults,noatime,nodiratime,${data_opts},lowerdir=${ROOTFS_DIR}/home,upperdir=${ROOTFS_DIR}/mnt/data/home/upper,workdir=${ROOTFS_DIR}/mnt/data/home/work \
          overlay ${ROOTFS_DIR}/home

    # bind mount /var/lib
    mkdir -p ${ROOTFS_DIR}/mnt/data/var/lib
    mount -o bind ${ROOTFS_DIR}/mnt/data/var/lib ${ROOTFS_DIR}/var/lib

    # bind mount /usr/local
    mkdir -p ${ROOTFS_DIR}/mnt/data/local
    mount -o bind ${ROOTFS_DIR}/mnt/data/local ${ROOTFS_DIR}/usr/local

    # bind mount /var/log
    if [ "${bootparam_persistent_var_log}" = "1" ]; then
        mkdir -p ${ROOTFS_DIR}/mnt/data/log
        mount -o bind ${ROOTFS_DIR}/mnt/data/log ${ROOTFS_DIR}/var/log
    fi

    # mount tmpfs
    mount -t tmpfs -o mode=0755,nodev,nosuid,strictatime tmpfs  ${ROOTFS_DIR}/run
    mount -t tmpfs -o defaults tmpfs  ${ROOTFS_DIR}/var/volatile
}
