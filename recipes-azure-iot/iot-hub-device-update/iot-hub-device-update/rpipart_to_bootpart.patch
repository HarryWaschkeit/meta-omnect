diff --git a/src/adu-shell/scripts/adu-swupdate.sh b/src/adu-shell/scripts/adu-swupdate.sh
index ea29262..f2a95c5 100644
--- a/src/adu-shell/scripts/adu-swupdate.sh
+++ b/src/adu-shell/scripts/adu-swupdate.sh
@@ -73,7 +73,8 @@ mkdir -p "$log_dir"
 # Here we figure out the current OS partition and then set some environment variables
 # that we use to tell swupdate which partition to target.
 rootfs_dev=$(mount | grep "on / type" | cut -d':' -f 2 | cut -d' ' -f 1)
-if [[ $rootfs_dev == '/dev/mmcblk0p2' ]]; then
+rootfs_dev=${rootfs_dev##*p}
+if [[ $rootfs_dev == '2' ]]; then
     selection="stable,copy2"
     current_part=2
     update_part=3
@@ -87,9 +88,9 @@ if [[ $action == "apply" ]]; then
     # Set the bootloader environment variable
     # to tell the bootloader to boot into the current partition
     # instead of the one that was updated.
-    # rpipart variable is specific to our boot.scr script.
+    # bootpart variable is specific to our boot.scr script.
     echo "Applying update." >> "${log_dir}/swupdate.log"
-    fw_setenv rpipart $update_part
+    fw_setenv bootpart $update_part
     $ret $?
 fi
 
@@ -97,9 +98,9 @@ if [[ $action == "revert" ]]; then
     # Set the bootloader environment variable
     # to tell the bootloader to boot into the current partition
     # instead of the one that was updated.
-    # rpipart variable is specific to our boot.scr script.
+    # bootpart variable is specific to our boot.scr script.
     echo "Reverting update." >> "${log_dir}/swupdate.log"
-    fw_setenv rpipart $current_part
+    fw_setenv bootpart $current_part
     $ret $?
 fi
 
